{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass InterfaceService {\n  constructor(_http) {\n    this._http = _http;\n    this.usuario = \"\";\n    this.usuario$ = new Subject();\n    this.online = true;\n  }\n  ngOnInit() {\n    //this.esVisitante();\n    this.cargarUsuario(\"a\");\n  }\n  esVisitante() {\n    const USUARIO = {\n      tipoUsuario: 0\n    };\n    this.usuario = USUARIO;\n    console.log(this.usuario);\n  }\n  //INICIO DE SESION\n  login(userRequest) {\n    return this._http.post(\"http://localhost:8080/Login\", userRequest).toPromise();\n  }\n  // OBTENER INFORMACION POR CORREO\n  userData(userRequest) {\n    let cadena = \"http://localhost:8080/obtenerUsuario/\" + userRequest;\n    return this._http.get(cadena).toPromise();\n  }\n  cargarUsuario(mail) {\n    this.userData(mail).then(data => {\n      this.usuario = data;\n    });\n    this.usuario$.next(this.usuario);\n  }\n  esparcirUsuario() {\n    if (this.usuario == \"\") {\n      const USUARIO = {\n        id_usuario: 15,\n        nombre: \"Ramon\",\n        //------\n        edad: 26,\n        profesion: \"Desarrollador\",\n        id_candidato: 1,\n        //------\n        correoElectronico: \"ramon2@gmail.com\",\n        contraseña: \"password\",\n        tipoUsuario: 2,\n        apellidoP: \"Serrano\",\n        apellidoM: \"Gamez\",\n        telefono: \"(+52)48-95-67-34-12\",\n        estatusUsuario: true,\n        //------\n        domicilio: \"C.Pinos N.447 Col.Nuevo Mundo\",\n        estado: {\n          id_estado: 1,\n          nombreEstado: \"México\"\n        },\n        municipio: {\n          id_municipio: 1,\n          nombreMunicipio: \"Acolman\",\n          id_estado: 1\n        },\n        centroEducativo: \"UAM Azcapotzalco\",\n        puestoActual: \"Programador Jr\",\n        //------\n        descripcion: \"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\" + \"ut facilisi hac suspendisse pretium ad urna, consequat id natoque sollicitudin orci mi tristique quisque posuere.\" + \"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\" + \"ut facilisi hac suspendisse pretium ad urna, consequat id natoque sollicitudin orci mi tristique quisque posuere.\" + \"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\"\n      };\n      this.usuario = USUARIO;\n    } else {}\n    this.usuario$.next(this.usuario);\n  }\n  getUser() {\n    return this.usuario$.asObservable();\n  }\n  obtenerEstados() {\n    return this._http.get(\"http://localhost:8080/obtenerListaEstados\").toPromise();\n  }\n  obtenerMunicipios(idRequest) {\n    let cadena = \"http://localhost:8080/botenerMunicipiosDeEstado/\" + idRequest;\n    return this._http.get(cadena).toPromise();\n  }\n}\nInterfaceService.ɵfac = function InterfaceService_Factory(t) {\n  return new (t || InterfaceService)(i0.ɵɵinject(i1.HttpClient));\n};\nInterfaceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InterfaceService,\n  factory: InterfaceService.ɵfac,\n  providedIn: 'root'\n});\nexport { InterfaceService };","map":{"version":3,"names":["Subject","InterfaceService","constructor","_http","usuario","usuario$","online","ngOnInit","cargarUsuario","esVisitante","USUARIO","tipoUsuario","console","log","login","userRequest","post","toPromise","userData","cadena","get","mail","then","data","next","esparcirUsuario","id_usuario","nombre","edad","profesion","id_candidato","correoElectronico","contraseña","apellidoP","apellidoM","telefono","estatusUsuario","domicilio","estado","id_estado","nombreEstado","municipio","id_municipio","nombreMunicipio","centroEducativo","puestoActual","descripcion","getUser","asObservable","obtenerEstados","obtenerMunicipios","idRequest","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/mancabra/Documents/PortalDeEmpleo/src/app/Services/InterfaceServices/interface.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterfaceService {\n\n  usuario:any = \"\";\n  private usuario$ = new Subject<any>();\n  online:boolean = true;\n\n  constructor(private _http: HttpClient) { }\n\n  ngOnInit(){\n    //this.esVisitante();\n    this.cargarUsuario(\"a\");\n  }\n\n  esVisitante(){\n    const USUARIO ={\n      tipoUsuario:0,\n    }\n      this.usuario = USUARIO;\n      console.log(this.usuario);\n  }\n\n  //INICIO DE SESION\n  login(userRequest: any) {\n    return this._http.post(\"http://localhost:8080/Login\", userRequest).toPromise();\n  }\n\n  // OBTENER INFORMACION POR CORREO\n  userData(userRequest: string) {\n    let cadena = \"http://localhost:8080/obtenerUsuario/\" + userRequest;\n    return this._http.get(cadena).toPromise();\n  }\n\n  cargarUsuario(mail:string){\n    this.userData(mail).then((data:any) =>{\n      this.usuario = data;\n    });\n  \n    this.usuario$.next(this.usuario);\n  }\n\n  esparcirUsuario(){\n    if (this.usuario == \"\"){\n      \n      const USUARIO ={\n        id_usuario: 15,\n        nombre:\"Ramon\",\n        //------\n        edad:26,\n        profesion:\"Desarrollador\",\n        id_candidato:1,\n        //------\n        correoElectronico:\"ramon2@gmail.com\",\n        contraseña:\"password\",\n        tipoUsuario:2,\n        apellidoP:\"Serrano\",\n        apellidoM:\"Gamez\",\n        telefono:\"(+52)48-95-67-34-12\",\n        estatusUsuario:true,\n           //------\n           domicilio:\"C.Pinos N.447 Col.Nuevo Mundo\",\n           estado:{id_estado:1,nombreEstado:\"México\"},\n           municipio:{id_municipio:1,nombreMunicipio:\"Acolman\",id_estado:1},\n\n           centroEducativo:\"UAM Azcapotzalco\",\n           puestoActual:\"Programador Jr\",\n           //------\n        descripcion:\"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\"\n        +\"ut facilisi hac suspendisse pretium ad urna, consequat id natoque sollicitudin orci mi tristique quisque posuere.\"\n        +\"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\"\n        +\"ut facilisi hac suspendisse pretium ad urna, consequat id natoque sollicitudin orci mi tristique quisque posuere.\"\n        +\"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\",\n        \n      }\n      this.usuario = USUARIO;\n\n      } else {\n\n      }\n\n      this.usuario$.next(this.usuario);\n  }\n\n  getUser():Observable<any>{\n    return this.usuario$.asObservable();\n  }\n\n  obtenerEstados(){\n    return this._http.get(\"http://localhost:8080/obtenerListaEstados\").toPromise();\n  }\n\n  obtenerMunicipios(idRequest:number){\n    let cadena = \"http://localhost:8080/botenerMunicipiosDeEstado/\"+idRequest;\n    return this._http.get(cadena).toPromise();\n  }\n\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}