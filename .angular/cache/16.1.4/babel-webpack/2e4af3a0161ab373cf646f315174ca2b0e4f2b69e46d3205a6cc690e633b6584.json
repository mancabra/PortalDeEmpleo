{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass InterfaceService {\n  constructor(_http) {\n    this._http = _http;\n    this.usuario = \"\";\n    this.correo = \"\";\n    this.usuario$ = new Subject();\n    this.alerts$ = new Subject();\n    this.alertas = [];\n    this.online = true;\n  }\n  ngOnInit() {\n    //this.esVisitante();\n    this.cargarUsuario(\"a\");\n  }\n  esVisitante() {\n    const USUARIO = {\n      tipoUsuario: 0\n    };\n    this.usuario = USUARIO;\n    console.log(this.usuario);\n  }\n  //INICIO DE SESION\n  login(userRequest) {\n    //prueba de funcionamiento\n    console.log(\"Proceso ligin\");\n    console.log(\"Info Enviada\");\n    console.log(userRequest);\n    return this._http.post(\"http://localhost:8080/Login\", userRequest).toPromise();\n  }\n  // OBTENER INFORMACION POR CORREO\n  userData(userRequest) {\n    //prueba de funcionamiento\n    console.log(\"Proceso obtenerUsuario\");\n    console.log(\"Info Enviada\");\n    console.log(userRequest);\n    let cadena = \"http://localhost:8080/obtenerUsuario/\" + userRequest;\n    return this._http.get(cadena).toPromise();\n  }\n  cargarUsuario(mail) {\n    //prueba de funcionamiento\n    console.log(\"Proceso cargarUsuario\");\n    console.log(\"Info Enviada\");\n    console.log(mail);\n    this.userData(mail).then(data => {\n      this.usuario = data;\n      console.log(\"Estatus de usuario\");\n      console.log(this.usuario);\n    });\n    this.usuario$.next(this.usuario);\n  }\n  esparcirUsuario() {\n    console.log(\"Esparcir usuario\");\n    if (this.usuario == \"\") {\n      const USUARIO = {\n        id_usuario: 15,\n        nombre: \"Ramon\",\n        //------\n        edad: 26,\n        profesion: \"Desarrollador\",\n        id_candidato: 1,\n        //------\n        correoElectronico: \"ramon2@gmail.com\",\n        contraseña: \"password\",\n        tipoUsuario: 3,\n        apellidoP: \"Serrano\",\n        apellidoM: \"Gamez\",\n        telefono: \"(+52)48-95-67-34-12\",\n        estatusUsuario: true,\n        //------\n        domicilio: \"C.Pinos N.447 Col.Nuevo Mundo\",\n        estado: {\n          id_estado: 1,\n          nombreEstado: \"México\"\n        },\n        municipio: {\n          id_municipio: 1,\n          nombreMunicipio: \"Acolman\",\n          id_estado: 1\n        },\n        centroEducativo: \"UAM Azcapotzalco\",\n        puestoActual: \"Programador Jr\",\n        //------\n        descripcion: \"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\" + \"ut facilisi hac suspendisse pretium ad urna, consequat id natoque sollicitudin orci mi tristique quisque posuere.\" + \"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\" + \"ut facilisi hac suspendisse pretium ad urna, consequat id natoque sollicitudin orci mi tristique quisque posuere.\" + \"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\"\n      };\n      this.usuario = USUARIO;\n    } else if (this.usuario == null) {} else {}\n    this.usuario$.next(this.usuario);\n  }\n  guaradarCorreo(correo) {\n    this.correo = correo;\n    console.log(this.correo);\n  }\n  getUser() {\n    return this.usuario$.asObservable();\n  }\n  buscarUsuario() {\n    console.log(\"Proceso buscarUsuario\");\n    console.log(\"Info Enviada\");\n    console.log(this.correo);\n    let cadena = \"http://localhost:8080/obtenerUsuario/\" + this.correo;\n    return this._http.get(cadena).toPromise();\n  }\n  actualizarUsuario(usuario) {\n    this.usuario = usuario;\n    console.log(this.usuario);\n    this.usuario$.next(this.usuario);\n  }\n  obtenerEstados() {\n    //prueba de funcionamiento\n    console.log(\"Proceso obtenerEstados\");\n    return this._http.get(\"http://localhost:8080/obtenerListaEstados\").toPromise();\n  }\n  obtenerMunicipios(idRequest) {\n    console.log(\"Proceso obtenerMunicipios\");\n    let cadena = \"http://localhost:8080/botenerMunicipiosDeEstado/\" + idRequest;\n    return this._http.get(cadena).toPromise();\n  }\n  // arreglo alertas\n  getAlerts() {\n    return this.alerts$.asObservable();\n  }\n  esparcirAlertas() {\n    this.alerts$.next(this.alertas);\n  }\n  agregarAlerta(alert) {\n    this.alertas.push(alert);\n    this.alerts$.next(this.alertas);\n  }\n}\nInterfaceService.ɵfac = function InterfaceService_Factory(t) {\n  return new (t || InterfaceService)(i0.ɵɵinject(i1.HttpClient));\n};\nInterfaceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InterfaceService,\n  factory: InterfaceService.ɵfac,\n  providedIn: 'root'\n});\nexport { InterfaceService };","map":{"version":3,"names":["Subject","InterfaceService","constructor","_http","usuario","correo","usuario$","alerts$","alertas","online","ngOnInit","cargarUsuario","esVisitante","USUARIO","tipoUsuario","console","log","login","userRequest","post","toPromise","userData","cadena","get","mail","then","data","next","esparcirUsuario","id_usuario","nombre","edad","profesion","id_candidato","correoElectronico","contraseña","apellidoP","apellidoM","telefono","estatusUsuario","domicilio","estado","id_estado","nombreEstado","municipio","id_municipio","nombreMunicipio","centroEducativo","puestoActual","descripcion","guaradarCorreo","getUser","asObservable","buscarUsuario","actualizarUsuario","obtenerEstados","obtenerMunicipios","idRequest","getAlerts","esparcirAlertas","agregarAlerta","alert","push","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/mancabra/Documents/PortalDeEmpleo/src/app/Services/InterfaceServices/interface.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterfaceService {\n\n  usuario: any = \"\";\n  correo:string =\"\";\n\n  private usuario$ = new Subject<any>();\n  private alerts$ = new Subject<any>();\n  alertas: any = [];\n  online: boolean = true;\n\n  constructor(private _http: HttpClient) { }\n\n  ngOnInit() {\n    //this.esVisitante();\n    this.cargarUsuario(\"a\");\n  }\n\n  esVisitante() {\n    const USUARIO = {\n      tipoUsuario: 0,\n    }\n    this.usuario = USUARIO;\n    console.log(this.usuario);\n  }\n\n  //INICIO DE SESION\n  login(userRequest: any) {\n    //prueba de funcionamiento\n    console.log(\"Proceso ligin\");\n    console.log(\"Info Enviada\");\n    console.log(userRequest);\n\n    return this._http.post(\"http://localhost:8080/Login\", userRequest).toPromise();\n  }\n\n  // OBTENER INFORMACION POR CORREO\n  userData(userRequest: string) {\n    //prueba de funcionamiento\n    console.log(\"Proceso obtenerUsuario\");\n    console.log(\"Info Enviada\");\n    console.log(userRequest);\n\n    let cadena = \"http://localhost:8080/obtenerUsuario/\" + userRequest;\n    return this._http.get(cadena).toPromise();\n  }\n\n  cargarUsuario(mail: string) {\n    //prueba de funcionamiento\n    console.log(\"Proceso cargarUsuario\");\n    console.log(\"Info Enviada\");\n    console.log(mail);\n\n    this.userData(mail).then((data: any) => {\n      this.usuario = data;\n      console.log(\"Estatus de usuario\");\n      console.log(this.usuario);\n\n    });\n\n    this.usuario$.next(this.usuario);\n  }\n\n  esparcirUsuario() {\n    console.log(\"Esparcir usuario\");\n    if (this.usuario == \"\") {\n\n      const USUARIO = {\n        id_usuario: 15,\n        nombre: \"Ramon\",\n        //------\n        edad: 26,\n        profesion: \"Desarrollador\",\n        id_candidato: 1,\n        //------\n        correoElectronico: \"ramon2@gmail.com\",\n        contraseña: \"password\",\n        tipoUsuario: 3,\n        apellidoP: \"Serrano\",\n        apellidoM: \"Gamez\",\n        telefono: \"(+52)48-95-67-34-12\",\n        estatusUsuario: true,\n        //------\n        domicilio: \"C.Pinos N.447 Col.Nuevo Mundo\",\n        estado: { id_estado: 1, nombreEstado: \"México\" },\n        municipio: { id_municipio: 1, nombreMunicipio: \"Acolman\", id_estado: 1 },\n\n        centroEducativo: \"UAM Azcapotzalco\",\n        puestoActual: \"Programador Jr\",\n        //------\n        descripcion: \"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\"\n          + \"ut facilisi hac suspendisse pretium ad urna, consequat id natoque sollicitudin orci mi tristique quisque posuere.\"\n          + \"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\"\n          + \"ut facilisi hac suspendisse pretium ad urna, consequat id natoque sollicitudin orci mi tristique quisque posuere.\"\n          + \"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\",\n\n      }\n      this.usuario = USUARIO;\n\n    } else if(this.usuario == null){\n\n    } else{\n\n    }\n\n    this.usuario$.next(this.usuario);\n  }\n\n  guaradarCorreo(correo:any){\n    this.correo = correo;\n    console.log(this.correo);\n  }\n\n  getUser(): Observable<any> {\n    return this.usuario$.asObservable();\n  }\n\n  buscarUsuario(){\n    console.log(\"Proceso buscarUsuario\");\n    console.log(\"Info Enviada\");\n    console.log(this.correo);\n\n    let cadena = \"http://localhost:8080/obtenerUsuario/\" + this.correo;\n    return this._http.get(cadena).toPromise();\n  }\n\n  actualizarUsuario(usuario:any){\n    this.usuario = usuario;\n    console.log(this.usuario);\n    this.usuario$.next(this.usuario);\n  }\n\n  obtenerEstados() {\n    //prueba de funcionamiento\n    console.log(\"Proceso obtenerEstados\");\n\n\n    return this._http.get(\"http://localhost:8080/obtenerListaEstados\").toPromise();\n  }\n\n  obtenerMunicipios(idRequest: number) {\n    console.log(\"Proceso obtenerMunicipios\");\n    let cadena = \"http://localhost:8080/botenerMunicipiosDeEstado/\" + idRequest;\n    return this._http.get(cadena).toPromise();\n  }\n\n  // arreglo alertas\n  getAlerts(): Observable<any> {\n    return this.alerts$.asObservable();\n  }\n\n  esparcirAlertas() {\n    this.alerts$.next(this.alertas);\n  }\n\n  agregarAlerta(alert: any) {\n\n    this.alertas.push(alert);\n    this.alerts$.next(this.alertas);\n  }\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}