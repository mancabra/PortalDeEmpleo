{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CompanyService {\n  constructor(_http) {\n    this._http = _http;\n    this.id_empresa = 0;\n  }\n  registrar(CompanyRequest) {\n    //prueba de funcionamiento\n    console.log(\"Proceso RegistrarEmpresa\");\n    console.log(\"Info Enviada\");\n    console.log(CompanyRequest);\n    return this._http.put(\"http://localhost:8080/\", CompanyRequest).toPromise();\n  }\n}\nCompanyService.ɵfac = function CompanyService_Factory(t) {\n  return new (t || CompanyService)(i0.ɵɵinject(i1.HttpClient));\n};\nCompanyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CompanyService,\n  factory: CompanyService.ɵfac,\n  providedIn: 'root'\n});\nexport { CompanyService };","map":{"version":3,"names":["CompanyService","constructor","_http","id_empresa","registrar","CompanyRequest","console","log","put","toPromise","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/mancabra/Documents/PortalDeEmpleo/src/app/Services/CompanyServices/company.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompanyService {\n  id_empresa: any = 0;\n\n  constructor(private _http: HttpClient) { }\n\n\n\n  registrar(CompanyRequest: any) {\n    //prueba de funcionamiento\n    console.log(\"Proceso RegistrarEmpresa\");\n    console.log(\"Info Enviada\");\n    console.log(CompanyRequest);\n\n    return this._http.put(\"http://localhost:8080/\", CompanyRequest).toPromise();\n  }\n}\n"],"mappings":";;AAGA,MAGaA,cAAc;EAGzBC,YAAoBC,KAAiB;IAAjB,KAAAA,KAAK,GAALA,KAAK;IAFzB,KAAAC,UAAU,GAAQ,CAAC;EAEsB;EAIzCC,SAASA,CAACC,cAAmB;IAC3B;IACAC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvCD,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BD,OAAO,CAACC,GAAG,CAACF,cAAc,CAAC;IAE3B,OAAO,IAAI,CAACH,KAAK,CAACM,GAAG,CAAC,wBAAwB,EAAEH,cAAc,CAAC,CAACI,SAAS,EAAE;EAC7E;;AAdWT,cAAc,C;mBAAdA,cAAc,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdb,cAAc,C;SAAdA,cAAc;EAAAc,OAAA,EAAdd,cAAc,CAAAe,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPhB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}