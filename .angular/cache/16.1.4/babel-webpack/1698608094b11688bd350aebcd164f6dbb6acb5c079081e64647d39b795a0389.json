{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CandidateService {\n  constructor(_http) {\n    this._http = _http;\n    this.id_candidato = 0;\n  }\n  registrar(CandidateRequest) {\n    //return this._http.put(\"http://localhost:8080/\", EmployerRequest).toPromise();\n    this._http.put(\"http://localhost:8080/registroCandidato\", CandidateRequest).subscribe(resultado => {\n      this.id_candidato = resultado;\n    });\n    return this.id_candidato;\n  }\n  modificar(CandidatoDTO) {\n    return this._http.put(\"http://localhost:8080/\", CandidatoDTO).toPromise();\n  }\n  obtenerVacantes() {\n    return this._http.get(\"http://localhost:8080/obtenerListaVacantes\").toPromise();\n  }\n  buscarporFiltro(BusquedaDTO) {\n    // VER COMO MANEJA SAMUEL LOS FILTROS\n    return this._http.get(\"http://localhost:8080/\", BusquedaDTO).toPromise();\n  }\n  postularse(PostDTO) {\n    return this._http.put(\"http://localhost:8080/postulacion\", PostDTO).toPromise();\n  }\n  obtenerPostulaciones(idRequest) {\n    let cadena = \"http://localhost:8080/obtenerPostulacionesPorIdDeCandidato/\" + idRequest;\n    return this._http.get(cadena).toPromise();\n  }\n  eliminarPostulacion(idRequest) {\n    let cadena = \"http://localhost:8080/eliminarPostulacion/\" + idRequest;\n    return this._http.delete(cadena).toPromise();\n  }\n}\nCandidateService.ɵfac = function CandidateService_Factory(t) {\n  return new (t || CandidateService)(i0.ɵɵinject(i1.HttpClient));\n};\nCandidateService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CandidateService,\n  factory: CandidateService.ɵfac,\n  providedIn: 'root'\n});\nexport { CandidateService };","map":{"version":3,"names":["CandidateService","constructor","_http","id_candidato","registrar","CandidateRequest","put","subscribe","resultado","modificar","CandidatoDTO","toPromise","obtenerVacantes","get","buscarporFiltro","BusquedaDTO","postularse","PostDTO","obtenerPostulaciones","idRequest","cadena","eliminarPostulacion","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/mancabra/Documents/PortalDeEmpleo/src/app/Services/CandidateServices/candidate.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CandidateService {\n  id_candidato:any=0;\n  \n  constructor(private _http:HttpClient) { }\n\n \n\n  registrar( CandidateRequest : any ){\n    //return this._http.put(\"http://localhost:8080/\", EmployerRequest).toPromise();\n    this._http.put(\"http://localhost:8080/registroCandidato\", CandidateRequest)\n    .subscribe(      \n      resultado => { this.id_candidato = resultado }\n    );\n    return this.id_candidato;\n  }\n\n  modificar(CandidatoDTO:any){\n    return this._http.put(\"http://localhost:8080/\",CandidatoDTO).toPromise();\n  }\n\n\n  obtenerVacantes(){\n    return this._http.get(\"http://localhost:8080/obtenerListaVacantes\").toPromise();\n  }\n\n  buscarporFiltro(BusquedaDTO:any){\n    // VER COMO MANEJA SAMUEL LOS FILTROS\n    return this._http.get(\"http://localhost:8080/\",BusquedaDTO).toPromise();\n  }\n\n  postularse(PostDTO:any){\n    return this._http.put(\"http://localhost:8080/postulacion\",PostDTO).toPromise();\n  }\n\n  obtenerPostulaciones(idRequest:number){\n    let cadena = \"http://localhost:8080/obtenerPostulacionesPorIdDeCandidato/\"+idRequest;\n    return this._http.get(cadena).toPromise();\n  }\n\n  eliminarPostulacion(idRequest:number){\n    let cadena = \"http://localhost:8080/eliminarPostulacion/\"+idRequest;\n    return this._http.delete(cadena).toPromise();\n\n  }\n\n\n\n}\n\n"],"mappings":";;AAGA,MAGaA,gBAAgB;EAG3BC,YAAoBC,KAAgB;IAAhB,KAAAA,KAAK,GAALA,KAAK;IAFzB,KAAAC,YAAY,GAAK,CAAC;EAEsB;EAIxCC,SAASA,CAAEC,gBAAsB;IAC/B;IACA,IAAI,CAACH,KAAK,CAACI,GAAG,CAAC,yCAAyC,EAAED,gBAAgB,CAAC,CAC1EE,SAAS,CACRC,SAAS,IAAG;MAAG,IAAI,CAACL,YAAY,GAAGK,SAAS;IAAC,CAAC,CAC/C;IACD,OAAO,IAAI,CAACL,YAAY;EAC1B;EAEAM,SAASA,CAACC,YAAgB;IACxB,OAAO,IAAI,CAACR,KAAK,CAACI,GAAG,CAAC,wBAAwB,EAACI,YAAY,CAAC,CAACC,SAAS,EAAE;EAC1E;EAGAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACV,KAAK,CAACW,GAAG,CAAC,4CAA4C,CAAC,CAACF,SAAS,EAAE;EACjF;EAEAG,eAAeA,CAACC,WAAe;IAC7B;IACA,OAAO,IAAI,CAACb,KAAK,CAACW,GAAG,CAAC,wBAAwB,EAACE,WAAW,CAAC,CAACJ,SAAS,EAAE;EACzE;EAEAK,UAAUA,CAACC,OAAW;IACpB,OAAO,IAAI,CAACf,KAAK,CAACI,GAAG,CAAC,mCAAmC,EAACW,OAAO,CAAC,CAACN,SAAS,EAAE;EAChF;EAEAO,oBAAoBA,CAACC,SAAgB;IACnC,IAAIC,MAAM,GAAG,6DAA6D,GAACD,SAAS;IACpF,OAAO,IAAI,CAACjB,KAAK,CAACW,GAAG,CAACO,MAAM,CAAC,CAACT,SAAS,EAAE;EAC3C;EAEAU,mBAAmBA,CAACF,SAAgB;IAClC,IAAIC,MAAM,GAAG,4CAA4C,GAACD,SAAS;IACnE,OAAO,IAAI,CAACjB,KAAK,CAACoB,MAAM,CAACF,MAAM,CAAC,CAACT,SAAS,EAAE;EAE9C;;AA3CWX,gBAAgB,C;mBAAhBA,gBAAgB,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhB1B,gBAAgB,C;SAAhBA,gBAAgB;EAAA2B,OAAA,EAAhB3B,gBAAgB,CAAA4B,IAAA;EAAAC,UAAA,EAFf;AAAM;SAEP7B,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}