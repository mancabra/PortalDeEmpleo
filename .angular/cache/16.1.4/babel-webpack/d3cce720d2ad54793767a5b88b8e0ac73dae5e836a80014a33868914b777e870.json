{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass InterfaceService {\n  constructor(_http) {\n    this._http = _http;\n    this.usuario = \"\";\n    this.usuario$ = new Subject();\n    this.online = true;\n  }\n  ngOnInit() {\n    //this.esVisitante();\n    this.cargarUsuario(\"a\");\n  }\n  esVisitante() {\n    const USUARIO = {\n      nombre: null,\n      apellidoP: null,\n      apellidoM: null,\n      tipoUsuario: 0\n    };\n    if (this.usuario == \"\") {\n      this.usuario = USUARIO;\n      console.log(this.usuario);\n    }\n  }\n  //INICIO DE SESION\n  login(userRequest) {\n    return this._http.post(\"http://localhost:8080/Login\", userRequest).toPromise();\n  }\n  // OBTENER INFORMACION POR CORREO\n  userData(userRequest) {\n    let cadena = \"http://localhost:8080/obtenerUsuario/\" + userRequest;\n    return this._http.get(cadena).toPromise();\n  }\n  cargarUsuario(mail) {\n    this.userData(mail).then(data => {\n      this.usuario = data;\n    });\n    if (this.usuario == \"\") {\n      const USUARIO = {\n        id_usuario: 15,\n        nombre: \"Ramon\",\n        correoElectronico: \"ramon2@gmail.com\",\n        contraseña: \"password\",\n        tipoUsuario: 1,\n        apellidoP: \"Serrano\",\n        apellidoM: \"Gamez\",\n        telefono: \"4895673412\",\n        estatusUsuario: true,\n        descripcion: \"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\" + \"ut facilisi hac suspendisse pretium ad urna, consequat id natoque sollicitudin orci mi tristique quisque posuere.\" + \"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\" + \"ut facilisi hac suspendisse pretium ad urna, consequat id natoque sollicitudin orci mi tristique quisque posuere.\" + \"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\"\n      };\n      alert(\"servicio\");\n      this.usuario = USUARIO;\n      console.log(this.usuario);\n    }\n    this.usuario$.next(this.usuario);\n  }\n  getUser() {\n    return this.usuario$.asObservable();\n  }\n}\nInterfaceService.ɵfac = function InterfaceService_Factory(t) {\n  return new (t || InterfaceService)(i0.ɵɵinject(i1.HttpClient));\n};\nInterfaceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InterfaceService,\n  factory: InterfaceService.ɵfac,\n  providedIn: 'root'\n});\nexport { InterfaceService };","map":{"version":3,"names":["Subject","InterfaceService","constructor","_http","usuario","usuario$","online","ngOnInit","cargarUsuario","esVisitante","USUARIO","nombre","apellidoP","apellidoM","tipoUsuario","console","log","login","userRequest","post","toPromise","userData","cadena","get","mail","then","data","id_usuario","correoElectronico","contraseña","telefono","estatusUsuario","descripcion","alert","next","getUser","asObservable","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/mancabra/Documents/PortalDeEmpleo/src/app/Services/InterfaceServices/interface.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterfaceService {\n\n  usuario:any = \"\";\n  private usuario$ = new Subject<any>();\n  online:boolean = true;\n\n  constructor(private _http: HttpClient) { }\n\n  ngOnInit(){\n    //this.esVisitante();\n    this.cargarUsuario(\"a\");\n  }\n\n  esVisitante(){\n    const USUARIO ={\n      nombre:null,\n      apellidoP:null,\n      apellidoM:null,\n      tipoUsuario:0,\n    }\n\n    if(this.usuario == \"\"){\n      this.usuario = USUARIO;\n      console.log(this.usuario);\n    }\n  }\n\n  //INICIO DE SESION\n  login(userRequest: any) {\n    return this._http.post(\"http://localhost:8080/Login\", userRequest).toPromise();\n  }\n\n  // OBTENER INFORMACION POR CORREO\n  userData(userRequest: string) {\n    let cadena = \"http://localhost:8080/obtenerUsuario/\" + userRequest;\n    return this._http.get(cadena).toPromise();\n  }\n\n  cargarUsuario(mail:string){\n    this.userData(mail).then((data:any) =>{\n      this.usuario = data;\n    });\n    if (this.usuario == \"\"){\n      \n    const USUARIO ={\n      id_usuario: 15,\n      nombre:\"Ramon\",\n      correoElectronico:\"ramon2@gmail.com\",\n      contraseña:\"password\",\n      tipoUsuario:1,\n      apellidoP:\"Serrano\",\n      apellidoM:\"Gamez\",\n      telefono:\"4895673412\",\n      estatusUsuario:true,\n      descripcion:\"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\"\n      +\"ut facilisi hac suspendisse pretium ad urna, consequat id natoque sollicitudin orci mi tristique quisque posuere.\"\n      +\"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\"\n      +\"ut facilisi hac suspendisse pretium ad urna, consequat id natoque sollicitudin orci mi tristique quisque posuere.\"\n      +\"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\",\n      \n    }\n\n    alert(\"servicio\");\n    this.usuario = USUARIO;\n \n    console.log(this.usuario)\n\n    }\n\n\n    this.usuario$.next(this.usuario);\n  }\n\n  getUser():Observable<any>{\n    return this.usuario$.asObservable();\n  }\n\n\n\n}\n"],"mappings":"AAEA,SAAqBA,OAAO,QAAQ,MAAM;;;AAE1C,MAGaC,gBAAgB;EAM3BC,YAAoBC,KAAiB;IAAjB,KAAAA,KAAK,GAALA,KAAK;IAJzB,KAAAC,OAAO,GAAO,EAAE;IACR,KAAAC,QAAQ,GAAG,IAAIL,OAAO,EAAO;IACrC,KAAAM,MAAM,GAAW,IAAI;EAEoB;EAEzCC,QAAQA,CAAA;IACN;IACA,IAAI,CAACC,aAAa,CAAC,GAAG,CAAC;EACzB;EAEAC,WAAWA,CAAA;IACT,MAAMC,OAAO,GAAE;MACbC,MAAM,EAAC,IAAI;MACXC,SAAS,EAAC,IAAI;MACdC,SAAS,EAAC,IAAI;MACdC,WAAW,EAAC;KACb;IAED,IAAG,IAAI,CAACV,OAAO,IAAI,EAAE,EAAC;MACpB,IAAI,CAACA,OAAO,GAAGM,OAAO;MACtBK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,OAAO,CAAC;;EAE7B;EAEA;EACAa,KAAKA,CAACC,WAAgB;IACpB,OAAO,IAAI,CAACf,KAAK,CAACgB,IAAI,CAAC,6BAA6B,EAAED,WAAW,CAAC,CAACE,SAAS,EAAE;EAChF;EAEA;EACAC,QAAQA,CAACH,WAAmB;IAC1B,IAAII,MAAM,GAAG,uCAAuC,GAAGJ,WAAW;IAClE,OAAO,IAAI,CAACf,KAAK,CAACoB,GAAG,CAACD,MAAM,CAAC,CAACF,SAAS,EAAE;EAC3C;EAEAZ,aAAaA,CAACgB,IAAW;IACvB,IAAI,CAACH,QAAQ,CAACG,IAAI,CAAC,CAACC,IAAI,CAAEC,IAAQ,IAAI;MACpC,IAAI,CAACtB,OAAO,GAAGsB,IAAI;IACrB,CAAC,CAAC;IACF,IAAI,IAAI,CAACtB,OAAO,IAAI,EAAE,EAAC;MAEvB,MAAMM,OAAO,GAAE;QACbiB,UAAU,EAAE,EAAE;QACdhB,MAAM,EAAC,OAAO;QACdiB,iBAAiB,EAAC,kBAAkB;QACpCC,UAAU,EAAC,UAAU;QACrBf,WAAW,EAAC,CAAC;QACbF,SAAS,EAAC,SAAS;QACnBC,SAAS,EAAC,OAAO;QACjBiB,QAAQ,EAAC,YAAY;QACrBC,cAAc,EAAC,IAAI;QACnBC,WAAW,EAAC,oGAAoG,GAC/G,mHAAmH,GACnH,oGAAoG,GACpG,mHAAmH,GACnH;OAEF;MAEDC,KAAK,CAAC,UAAU,CAAC;MACjB,IAAI,CAAC7B,OAAO,GAAGM,OAAO;MAEtBK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,OAAO,CAAC;;IAKzB,IAAI,CAACC,QAAQ,CAAC6B,IAAI,CAAC,IAAI,CAAC9B,OAAO,CAAC;EAClC;EAEA+B,OAAOA,CAAA;IACL,OAAO,IAAI,CAAC9B,QAAQ,CAAC+B,YAAY,EAAE;EACrC;;AA3EWnC,gBAAgB,C;mBAAhBA,gBAAgB,EAAAoC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhBvC,gBAAgB,C;SAAhBA,gBAAgB;EAAAwC,OAAA,EAAhBxC,gBAAgB,CAAAyC,IAAA;EAAAC,UAAA,EAFf;AAAM;SAEP1C,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}