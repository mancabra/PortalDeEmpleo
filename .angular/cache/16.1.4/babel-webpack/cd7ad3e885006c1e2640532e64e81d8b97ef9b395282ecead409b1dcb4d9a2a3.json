{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CandidateService {\n  constructor(_http) {\n    this._http = _http;\n    this.id_candidato = 0;\n  }\n  registrar(EmployerRequest) {\n    //return this._http.put(\"http://localhost:8080/\", EmployerRequest).toPromise();\n    this._http.put(\"http://localhost:8080/registroCandidato\", EmployerRequest).subscribe(resultado => {\n      this.id_candidato = resultado;\n    });\n    return this.id_candidato;\n  }\n  obtenerVacanates() {\n    return this._http.get(\"http://localhost:8080/obtenerListaVacantes\").toPromise();\n  }\n  postularse(PostDTO) {\n    return this._http.put(\"http://localhost:8080/postulacion\", PostDTO).toPromise();\n  }\n}\nCandidateService.ɵfac = function CandidateService_Factory(t) {\n  return new (t || CandidateService)(i0.ɵɵinject(i1.HttpClient));\n};\nCandidateService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CandidateService,\n  factory: CandidateService.ɵfac,\n  providedIn: 'root'\n});\nexport { CandidateService };","map":{"version":3,"names":["CandidateService","constructor","_http","id_candidato","registrar","EmployerRequest","put","subscribe","resultado","obtenerVacanates","get","toPromise","postularse","PostDTO","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/mancabra/Documents/PortalDeEmpleo/src/app/Services/CandidateServices/candidate.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CandidateService {\n  id_candidato:any=0;\n  constructor(private _http:HttpClient) { }\n\n \n\n  registrar( EmployerRequest : any ){\n    //return this._http.put(\"http://localhost:8080/\", EmployerRequest).toPromise();\n    this._http.put(\"http://localhost:8080/registroCandidato\", EmployerRequest)\n    .subscribe(      \n      resultado => { this.id_candidato = resultado }\n    );\n    return this.id_candidato;\n  }\n\n  obtenerVacanates(){\n    return this._http.get(\"http://localhost:8080/obtenerListaVacantes\").toPromise();\n  }\n\n  postularse(PostDTO:any){\n    return this._http.put(\"http://localhost:8080/postulacion\",PostDTO).toPromise();\n  }\n\n\n\n}\n\n"],"mappings":";;AAGA,MAGaA,gBAAgB;EAE3BC,YAAoBC,KAAgB;IAAhB,KAAAA,KAAK,GAALA,KAAK;IADzB,KAAAC,YAAY,GAAK,CAAC;EACsB;EAIxCC,SAASA,CAAEC,eAAqB;IAC9B;IACA,IAAI,CAACH,KAAK,CAACI,GAAG,CAAC,yCAAyC,EAAED,eAAe,CAAC,CACzEE,SAAS,CACRC,SAAS,IAAG;MAAG,IAAI,CAACL,YAAY,GAAGK,SAAS;IAAC,CAAC,CAC/C;IACD,OAAO,IAAI,CAACL,YAAY;EAC1B;EAEAM,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACP,KAAK,CAACQ,GAAG,CAAC,4CAA4C,CAAC,CAACC,SAAS,EAAE;EACjF;EAEAC,UAAUA,CAACC,OAAW;IACpB,OAAO,IAAI,CAACX,KAAK,CAACI,GAAG,CAAC,mCAAmC,EAACO,OAAO,CAAC,CAACF,SAAS,EAAE;EAChF;;AArBWX,gBAAgB,C;mBAAhBA,gBAAgB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhBjB,gBAAgB,C;SAAhBA,gBAAgB;EAAAkB,OAAA,EAAhBlB,gBAAgB,CAAAmB,IAAA;EAAAC,UAAA,EAFf;AAAM;SAEPpB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}