{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { Candidato } from '../Entity/candidato';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../CandidateServices/candidate.service\";\nimport * as i3 from \"../AdminServices/admin.service\";\nimport * as i4 from \"../EmployerServices/employer.service\";\nclass InterfaceService {\n  //online: boolean = true;\n  constructor(_http, _CandidateRequest, _AdminRequest, _EmployerRequest) {\n    this._http = _http;\n    this._CandidateRequest = _CandidateRequest;\n    this._AdminRequest = _AdminRequest;\n    this._EmployerRequest = _EmployerRequest;\n    this.usuario = new Candidato();\n    this.correo = \"ramon@gmail.com\";\n    this.usuario$ = new Subject();\n    this.alerts$ = new Subject();\n    this.alertas = [];\n  }\n  ngOnInit() {}\n  //INICIO DE SESION\n  login(userRequest) {\n    //prueba de funcionamiento\n    console.log(\"Proceso ligin\");\n    console.log(\"Info Enviada\");\n    console.log(userRequest);\n    return this._http.post(\"http://localhost:8080/Login\", userRequest).toPromise();\n  }\n  /*\n    // OBTENER INFORMACION POR CORREO\n    userData(userRequest: string) {\n      //prueba de funcionamiento\n      console.log(\"Proceso obtenerUsuario\");\n      console.log(\"Info Enviada\");\n      console.log(userRequest);\n  \n      let cadena = \"http://localhost:8080/obtenerUsuario/\" + userRequest;\n      return this._http.get(cadena).toPromise();\n    }\n  \n    cargarUsuario(mail: string) {\n      //prueba de funcionamiento\n      console.log(\"Proceso cargarUsuario\");\n      console.log(\"Info Enviada\");\n      console.log(mail);\n  \n      this.userData(mail).then((data: any) => {\n        this.usuario = data;\n        console.log(\"Estatus de usuario\");\n        console.log(this.usuario);\n  \n      });\n  \n      this.usuario$.next(this.usuario);\n    }\n  \n    esparcirUsuario() {\n      console.log(\"Esparcir usuario\");\n      if (this.usuario == \"\") {\n  \n        const USUARIO = {\n          id_usuario: 15,\n          nombre: \"Ramon\",\n          //------\n          edad: 26,\n          profesion: \"Desarrollador\",\n          id_candidato: 1,\n          //------\n          correoElectronico: \"ramon2@gmail.com\",\n          contraseña: \"password\",\n          tipoUsuario: 2,\n          apellidoP: \"Serrano\",\n          apellidoM: \"Gamez\",\n          telefono: \"(+52)48-95-67-34-12\",\n          estatusUsuario: true,\n          //------\n          domicilio: \"C.Pinos N.447 Col.Nuevo Mundo\",\n          estado: { id_estado: 1, nombreEstado: \"México\" },\n          municipio: { id_municipio: 1, nombreMunicipio: \"Acolman\", id_estado: 1 },\n  \n          centroEducativo: \"UAM Azcapotzalco\",\n          puestoActual: \"Programador Jr\",\n          //------\n          descripcion: \"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\"\n            + \"ut facilisi hac suspendisse pretium ad urna, consequat id natoque sollicitudin orci mi tristique quisque posuere.\"\n            + \"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\"\n            + \"ut facilisi hac suspendisse pretium ad urna, consequat id natoque sollicitudin orci mi tristique quisque posuere.\"\n            + \"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\",\n  \n        }\n        this.usuario = USUARIO;\n  \n      } else if(this.usuario == null){\n  \n      } else{\n  \n      }\n  \n      this.usuario$.next(this.usuario);\n    }\n  \n    \n  \n    buscarUsuario(){\n      console.log(\"Proceso buscarUsuario\");\n      console.log(\"Info Enviada\");\n      console.log(this.correo);\n  \n      let cadena = \"http://localhost:8080/obtenerUsuario/\" + this.correo;\n      return this._http.get(cadena).toPromise();\n    }\n      */\n  buscarUsuario() {\n    this._CandidateRequest.obtener(this.correo).then(data => {\n      this.usuario = data;\n      this.actualizarUsuario(data);\n    });\n  }\n  actualizarUsuario(usuario) {\n    this.usuario = usuario;\n    console.log(this.usuario);\n    this.usuario$.next(this.usuario);\n  }\n  getUser() {\n    return this.usuario$.asObservable();\n  }\n  guaradarCorreo(correo) {\n    this.correo = correo;\n    this._AdminRequest.guaradarCorreo(correo);\n    this._CandidateRequest.guaradarCorreo(correo);\n    this._EmployerRequest.guaradarCorreo(correo);\n  }\n  obtenerEstados() {\n    //prueba de funcionamiento\n    console.log(\"Proceso obtenerEstados\");\n    return this._http.get(\"http://localhost:8080/obtenerListaEstados\");\n  }\n  obtenerMunicipios(idRequest) {\n    console.log(\"Proceso obtenerMunicipios\");\n    console.log(\"Info Enviada\");\n    console.log(idRequest);\n    let cadena = \"http://localhost:8080/obtenerMunicipiosDeEstado/\" + idRequest;\n    return this._http.get(cadena);\n  }\n  // arreglo alertas\n  getAlerts() {\n    return this.alerts$.asObservable();\n  }\n  esparcirAlertas() {\n    this.alerts$.next(this.alertas);\n  }\n  agregarAlerta(alert) {\n    this.alertas.push(alert);\n    this.alerts$.next(this.alertas);\n  }\n}\nInterfaceService.ɵfac = function InterfaceService_Factory(t) {\n  return new (t || InterfaceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CandidateService), i0.ɵɵinject(i3.AdminService), i0.ɵɵinject(i4.EmployerService));\n};\nInterfaceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InterfaceService,\n  factory: InterfaceService.ɵfac,\n  providedIn: 'root'\n});\nexport { InterfaceService };","map":{"version":3,"names":["Subject","Candidato","InterfaceService","constructor","_http","_CandidateRequest","_AdminRequest","_EmployerRequest","usuario","correo","usuario$","alerts$","alertas","ngOnInit","login","userRequest","console","log","post","toPromise","buscarUsuario","obtener","then","data","actualizarUsuario","next","getUser","asObservable","guaradarCorreo","obtenerEstados","get","obtenerMunicipios","idRequest","cadena","getAlerts","esparcirAlertas","agregarAlerta","alert","push","i0","ɵɵinject","i1","HttpClient","i2","CandidateService","i3","AdminService","i4","EmployerService","factory","ɵfac","providedIn"],"sources":["/Users/mancabra/Documents/PortalDeEmpleo/src/app/Services/InterfaceServices/interface.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { Municipio } from '../Entity/municipio';\nimport { Estado } from '../Entity/estado';\nimport { CandidateService } from '../CandidateServices/candidate.service';\nimport { AdminService } from '../AdminServices/admin.service';\nimport { EmployerService } from '../EmployerServices/employer.service';\nimport { Candidato } from '../Entity/candidato';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterfaceService {\n\n  usuario:Candidato = new Candidato;\n  correo: string  = \"ramon@gmail.com\";\n\n  private usuario$ = new Subject<Candidato>();\n  private alerts$ = new Subject<any>();\n  \n\n  alertas: any = [];\n  //online: boolean = true;\n\n  constructor(private _http: HttpClient,\n              private _CandidateRequest: CandidateService,\n              private _AdminRequest: AdminService,\n              private _EmployerRequest: EmployerService) { }\n\n  ngOnInit() {\n\n  }\n\n  //INICIO DE SESION\n  login(userRequest: any) {\n    //prueba de funcionamiento\n    console.log(\"Proceso ligin\");\n    console.log(\"Info Enviada\");\n    console.log(userRequest);\n\n    return this._http.post(\"http://localhost:8080/Login\", userRequest).toPromise();\n  }\n\n/*\n  // OBTENER INFORMACION POR CORREO\n  userData(userRequest: string) {\n    //prueba de funcionamiento\n    console.log(\"Proceso obtenerUsuario\");\n    console.log(\"Info Enviada\");\n    console.log(userRequest);\n\n    let cadena = \"http://localhost:8080/obtenerUsuario/\" + userRequest;\n    return this._http.get(cadena).toPromise();\n  }\n\n  cargarUsuario(mail: string) {\n    //prueba de funcionamiento\n    console.log(\"Proceso cargarUsuario\");\n    console.log(\"Info Enviada\");\n    console.log(mail);\n\n    this.userData(mail).then((data: any) => {\n      this.usuario = data;\n      console.log(\"Estatus de usuario\");\n      console.log(this.usuario);\n\n    });\n\n    this.usuario$.next(this.usuario);\n  }\n\n  esparcirUsuario() {\n    console.log(\"Esparcir usuario\");\n    if (this.usuario == \"\") {\n\n      const USUARIO = {\n        id_usuario: 15,\n        nombre: \"Ramon\",\n        //------\n        edad: 26,\n        profesion: \"Desarrollador\",\n        id_candidato: 1,\n        //------\n        correoElectronico: \"ramon2@gmail.com\",\n        contraseña: \"password\",\n        tipoUsuario: 2,\n        apellidoP: \"Serrano\",\n        apellidoM: \"Gamez\",\n        telefono: \"(+52)48-95-67-34-12\",\n        estatusUsuario: true,\n        //------\n        domicilio: \"C.Pinos N.447 Col.Nuevo Mundo\",\n        estado: { id_estado: 1, nombreEstado: \"México\" },\n        municipio: { id_municipio: 1, nombreMunicipio: \"Acolman\", id_estado: 1 },\n\n        centroEducativo: \"UAM Azcapotzalco\",\n        puestoActual: \"Programador Jr\",\n        //------\n        descripcion: \"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\"\n          + \"ut facilisi hac suspendisse pretium ad urna, consequat id natoque sollicitudin orci mi tristique quisque posuere.\"\n          + \"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\"\n          + \"ut facilisi hac suspendisse pretium ad urna, consequat id natoque sollicitudin orci mi tristique quisque posuere.\"\n          + \"Lorem ipsum dolor sit amet consectetur adipiscing elit interdum nascetur purus, libero integer qui\",\n\n      }\n      this.usuario = USUARIO;\n\n    } else if(this.usuario == null){\n\n    } else{\n\n    }\n\n    this.usuario$.next(this.usuario);\n  }\n\n  \n\n  buscarUsuario(){\n    console.log(\"Proceso buscarUsuario\");\n    console.log(\"Info Enviada\");\n    console.log(this.correo);\n\n    let cadena = \"http://localhost:8080/obtenerUsuario/\" + this.correo;\n    return this._http.get(cadena).toPromise();\n  }\n    */\n\n\n\n  buscarUsuario(){\n    this._CandidateRequest.obtener(this.correo).then((data:any) =>{\n      this.usuario = data;\n\n     this.actualizarUsuario(data);\n    });\n\n  }\n\n  actualizarUsuario(usuario:any){\n    this.usuario = usuario;\n    console.log(this.usuario);\n    this.usuario$.next(this.usuario);\n  }\n\n\n  getUser(): Observable<any> {\n    return this.usuario$.asObservable();\n  }\n\n  guaradarCorreo(correo:any){\n    this.correo = correo ;\n    this._AdminRequest.guaradarCorreo(correo);\n    this._CandidateRequest.guaradarCorreo(correo);\n    this._EmployerRequest.guaradarCorreo(correo);\n  }\n\n  obtenerEstados():Observable<Estado[]> {\n    //prueba de funcionamiento\n    console.log(\"Proceso obtenerEstados\");\n\n    return this._http.get<Estado[]>(\"http://localhost:8080/obtenerListaEstados\");\n  }\n\n  obtenerMunicipios(idRequest: number):Observable<Municipio[]> {\n    console.log(\"Proceso obtenerMunicipios\");\n    console.log(\"Info Enviada\");\n    console.log(idRequest);\n    let cadena = \"http://localhost:8080/obtenerMunicipiosDeEstado/\" + idRequest;\n    return this._http.get<Municipio[]>(cadena);\n  }\n\n  // arreglo alertas\n  getAlerts(): Observable<any> {\n    return this.alerts$.asObservable();\n  }\n\n  esparcirAlertas() {\n    this.alerts$.next(this.alertas);\n  }\n\n  agregarAlerta(alert: any) {\n\n    this.alertas.push(alert);\n    this.alerts$.next(this.alertas);\n  }\n\n\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}