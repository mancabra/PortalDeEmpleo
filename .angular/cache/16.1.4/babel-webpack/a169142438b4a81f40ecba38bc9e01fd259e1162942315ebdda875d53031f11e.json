{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { Candidato } from '../Entity/candidato';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../CandidateServices/candidate.service\";\nimport * as i3 from \"../AdminServices/admin.service\";\nimport * as i4 from \"../EmployerServices/employer.service\";\nclass InterfaceService {\n  //online: boolean = true;\n  constructor(_http, _CandidateRequest, _AdminRequest, _EmployerRequest) {\n    this._http = _http;\n    this._CandidateRequest = _CandidateRequest;\n    this._AdminRequest = _AdminRequest;\n    this._EmployerRequest = _EmployerRequest;\n    this.usuario = new Candidato();\n    this.correo = \"\";\n    this.alerts$ = new Subject();\n    this.alertas = [];\n    this.nav$ = new Subject();\n    this.ocultarNav = false;\n    this.tipo$ = new Subject();\n    this.tipoUsuario = 0;\n    this.Postulaciones$ = new Subject();\n    this.Postulaciones = [];\n    this.$ = new Subject();\n    this.tipoUsuario = 0;\n  }\n  ngOnInit() {}\n  //INICIO DE SESION\n  login(userRequest) {\n    //prueba de funcionamiento\n    console.log(\"Proceso ligin\");\n    console.log(\"Info Enviada\");\n    console.log(userRequest);\n    return this._http.post(\"http://localhost:8080/Login\", userRequest).toPromise();\n  }\n  guaradarCorreo(correo) {\n    this.correo = correo;\n    this._AdminRequest.guaradarCorreo(correo);\n    this._CandidateRequest.guaradarCorreo(correo);\n    this._EmployerRequest.guaradarCorreo(correo);\n  }\n  obtenerEstados() {\n    //prueba de funcionamiento\n    console.log(\"Proceso obtenerEstados\");\n    return this._http.get(\"http://localhost:8080/obtenerListaEstados\");\n  }\n  obtenerMunicipios(idRequest) {\n    console.log(\"Proceso obtenerMunicipios\");\n    console.log(\"Info Enviada\");\n    console.log(idRequest);\n    let cadena = \"http://localhost:8080/obtenerMunicipiosDeEstado/\" + idRequest;\n    return this._http.get(cadena);\n  }\n  // arreglo alertas\n  getAlerts() {\n    return this.alerts$.asObservable();\n  }\n  esparcirAlertas() {\n    this.alerts$.next(this.alertas);\n  }\n  agregarAlerta(alert) {\n    this.alertas.push(alert);\n    this.alerts$.next(this.alertas);\n  }\n  getNavBar() {\n    return this.nav$.asObservable();\n  }\n  ocultarNavB() {\n    this.ocultarNav = true;\n    this.nav$.next(this.ocultarNav);\n  }\n  mostarNav() {\n    this.ocultarNav = false;\n    this.nav$.next(this.ocultarNav);\n  }\n  //OBSERVABLES TIPO USUARIO\n  getTipoUsuario() {\n    return this.tipo$.asObservable();\n  }\n  cambiartipo() {\n    this._CandidateRequest.obtener().then(data => {\n      this.tipoUsuario = data.usuario.tipoUsuario;\n      this.usuarioActivo(this.tipoUsuario);\n    });\n  }\n  usuarioActivo(tipo) {\n    this.tipo$.next(tipo);\n  }\n  hacerVisitante() {\n    this.tipoUsuario = 0;\n    this.tipo$.next(this.tipoUsuario);\n  }\n}\nInterfaceService.ɵfac = function InterfaceService_Factory(t) {\n  return new (t || InterfaceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CandidateService), i0.ɵɵinject(i3.AdminService), i0.ɵɵinject(i4.EmployerService));\n};\nInterfaceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InterfaceService,\n  factory: InterfaceService.ɵfac,\n  providedIn: 'root'\n});\nexport { InterfaceService };","map":{"version":3,"names":["Subject","Candidato","InterfaceService","constructor","_http","_CandidateRequest","_AdminRequest","_EmployerRequest","usuario","correo","alerts$","alertas","nav$","ocultarNav","tipo$","tipoUsuario","Postulaciones$","Postulaciones","$","ngOnInit","login","userRequest","console","log","post","toPromise","guaradarCorreo","obtenerEstados","get","obtenerMunicipios","idRequest","cadena","getAlerts","asObservable","esparcirAlertas","next","agregarAlerta","alert","push","getNavBar","ocultarNavB","mostarNav","getTipoUsuario","cambiartipo","obtener","then","data","usuarioActivo","tipo","hacerVisitante","i0","ɵɵinject","i1","HttpClient","i2","CandidateService","i3","AdminService","i4","EmployerService","factory","ɵfac","providedIn"],"sources":["/Users/mancabra/Documents/PortalDeEmpleo/src/app/Services/InterfaceServices/interface.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { Municipio } from '../Entity/municipio';\nimport { Estado } from '../Entity/estado';\nimport { CandidateService } from '../CandidateServices/candidate.service';\nimport { AdminService } from '../AdminServices/admin.service';\nimport { EmployerService } from '../EmployerServices/employer.service';\nimport { Candidato } from '../Entity/candidato';\nimport { Postulacion } from '../Entity/postulacion';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterfaceService {\n\n  usuario:Candidato = new Candidato;\n  correo: string  = \"\";\n\n  private alerts$ = new Subject<any>();\n  alertas: any = [];\n\n  private nav$ = new Subject<boolean>();\n  ocultarNav: boolean = false;\n\n  private tipo$ = new Subject<number>();\n  tipoUsuario:number = 0;\n\n  private Postulaciones$ = new Subject<number>();\n  Postulaciones:Postulacion[] = [];\n\n  private $ = new Subject<number>();\n  tipoUsuario:number = 0;\n\n  //online: boolean = true;\n\n  constructor(private _http: HttpClient,\n              private _CandidateRequest: CandidateService,\n              private _AdminRequest: AdminService,\n              private _EmployerRequest: EmployerService) { }\n\n  ngOnInit() {\n\n  }\n\n  //INICIO DE SESION\n  login(userRequest: any) {\n    //prueba de funcionamiento\n    console.log(\"Proceso ligin\");\n    console.log(\"Info Enviada\");\n    console.log(userRequest);\n\n    return this._http.post(\"http://localhost:8080/Login\", userRequest).toPromise();\n  }\n\n  guaradarCorreo(correo:any){\n    this.correo = correo ;\n    this._AdminRequest.guaradarCorreo(correo);\n    this._CandidateRequest.guaradarCorreo(correo);\n    this._EmployerRequest.guaradarCorreo(correo);\n  }\n\n  obtenerEstados():Observable<Estado[]> {\n    //prueba de funcionamiento\n    console.log(\"Proceso obtenerEstados\");\n\n    return this._http.get<Estado[]>(\"http://localhost:8080/obtenerListaEstados\");\n  }\n\n  obtenerMunicipios(idRequest: number):Observable<Municipio[]> {\n    console.log(\"Proceso obtenerMunicipios\");\n    console.log(\"Info Enviada\");\n    console.log(idRequest);\n    let cadena = \"http://localhost:8080/obtenerMunicipiosDeEstado/\" + idRequest;\n    return this._http.get<Municipio[]>(cadena);\n  }\n\n  // arreglo alertas\n  getAlerts(): Observable<any> {\n    return this.alerts$.asObservable();\n  }\n\n  esparcirAlertas() {\n    this.alerts$.next(this.alertas);\n  }\n\n  agregarAlerta(alert: any) {\n    this.alertas.push(alert);\n    this.alerts$.next(this.alertas);\n  }\n\n  getNavBar(): Observable<boolean> {\n    return this.nav$.asObservable();\n  }\n\n  ocultarNavB() {\n    this.ocultarNav = true;\n    this.nav$.next(this.ocultarNav);\n  }\n\n  mostarNav(){\n    this.ocultarNav = false;\n    this.nav$.next(this.ocultarNav);\n  }\n\n  //OBSERVABLES TIPO USUARIO\n\n  getTipoUsuario(): Observable<number> {\n    return this.tipo$.asObservable();\n  }\n\n  cambiartipo() {\n    this._CandidateRequest.obtener().then((data:any) =>{\n      this.tipoUsuario = data.usuario.tipoUsuario;\n      this.usuarioActivo(this.tipoUsuario);\n    });\n \n  }\n\n  usuarioActivo(tipo:number){\n    this.tipo$.next(tipo);\n  }\n\n  hacerVisitante(){\n    this.tipoUsuario = 0;\n    this.tipo$.next(this.tipoUsuario);\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}