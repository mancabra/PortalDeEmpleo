{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet NavbarComponent = class NavbarComponent {\n  constructor() {\n    this.id_tipoUsusario = 0;\n    this.Vacantes = true;\n    this.Postulaciones = true;\n    this.Notificaciones = true;\n    this.Perfil = true;\n    this.Administrar = true;\n    this.Peticiones = true;\n    this.Publicaciones = true;\n    this.Publicar = true;\n    this.candidato = [{\n      nombrePestana: \"Vacantes\"\n    }, {\n      nombrePestana: \"Postulaciones\"\n    }, {\n      nombrePestana: \"Notificaciones\"\n    }, {\n      nombrePestana: \"Perfil\"\n    }];\n    this.usuarioVisitante = [{\n      nombrePestana: \"Vacantes\"\n    }, {\n      nombrePestana: \"Ingresar\"\n    }, {\n      nombrePestana: \"Registrar\"\n    }];\n    this.empleador = [{\n      nombrePestana: \"Publicar\"\n    }, {\n      nombrePestana: \"Publicaciones\"\n    }, {\n      nombrePestana: \"Notificaciones\"\n    }, {\n      nombrePestana: \"Perfil\"\n    }];\n    this.administrador = [{\n      nombrePestana: \"Administrar\"\n    }, {\n      nombrePestana: \"Peticiones\"\n    }, {\n      nombrePestana: \"Perfil\"\n    }];\n    this.windows = this.candidato;\n  }\n  ngOnInit() {}\n  seleccionar(ventana) {\n    if (ventana == \"Vacantes\") {\n      this.Vacantes = false;\n      alert(\"Vacantes\");\n    } else if (ventana == \"Postulaciones\") {\n      this.Postulaciones = false;\n    } else if (ventana == \"Notificaciones\") {\n      this.Notificaciones = false;\n    } else if (ventana == \"Perfil\") {\n      this.Perfil = false;\n    } else if (ventana == \"Administrar\") {\n      this.Administrar = false;\n    } else if (ventana == \"Peticiones\") {\n      this.Peticiones = false;\n    } else if (ventana == \"Publicaciones\") {\n      this.Publicaciones = false;\n    } else if (ventana == \"Publicar\") {\n      this.Publicar = false;\n    } else {}\n  }\n};\nNavbarComponent = __decorate([Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})], NavbarComponent);\nexport { NavbarComponent };","map":{"version":3,"names":["Component","NavbarComponent","constructor","id_tipoUsusario","Vacantes","Postulaciones","Notificaciones","Perfil","Administrar","Peticiones","Publicaciones","Publicar","candidato","nombrePestana","usuarioVisitante","empleador","administrador","windows","ngOnInit","seleccionar","ventana","alert","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/mancabra/Documents/PortalDeEmpleo/src/app/Components/Interface/interface/navbar/navbar.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\nid_tipoUsusario:number =0;\n\nVacantes:boolean = true;\nPostulaciones:boolean = true;\nNotificaciones:boolean = true;\nPerfil:boolean = true;\nAdministrar:boolean = true;\nPeticiones:boolean = true;\nPublicaciones:boolean = true;\nPublicar:boolean = true;\n\ncandidato: any[] = [{ nombrePestana: \"Vacantes\"},\n                    { nombrePestana: \"Postulaciones\"},\n                    { nombrePestana: \"Notificaciones\"},\n                    { nombrePestana: \"Perfil\"},\n];\n\nusuarioVisitante: any[] = [{ nombrePestana: \"Vacantes\"},\n                           { nombrePestana: \"Ingresar\"},\n                           { nombrePestana: \"Registrar\"},\n];\n\nempleador: any[] = [{ nombrePestana: \"Publicar\"},\n                    { nombrePestana: \"Publicaciones\"},\n                    { nombrePestana: \"Notificaciones\"},\n                    { nombrePestana: \"Perfil\"},\n];\n\nadministrador: any[] = [{ nombrePestana: \"Administrar\"},\n                        { nombrePestana: \"Peticiones\" },\n                        { nombrePestana: \"Perfil\"},\n];\n\nwindows: any = this.candidato;\n\nconstructor(){\n\n}\nngOnInit(){\n\n}\n\nseleccionar(ventana:string){\n  if(ventana==\"Vacantes\"){\n    this.Vacantes= false;\n    alert(\"Vacantes\");\n  }else if(ventana==\"Postulaciones\"){\n    this.Postulaciones= false;\n  }else if(ventana==\"Notificaciones\"){\n    this.Notificaciones = false;\n  }else if(ventana==\"Perfil\"){\n    this.Perfil = false;\n  }else if(ventana==\"Administrar\"){\n    this.Administrar = false;\n  }else if(ventana==\"Peticiones\"){\n    this.Peticiones = false;\n  }else if(ventana==\"Publicaciones\"){\n    this.Publicaciones = false;\n  }else if(ventana==\"Publicar\"){\n    this.Publicar = false;\n  }else{\n\n  }\n\n\n}\n\n}\n\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOzC,IAAaC,eAAe,GAA5B,MAAaA,eAAe;EAoC5BC,YAAA;IAnCA,KAAAC,eAAe,GAAS,CAAC;IAEzB,KAAAC,QAAQ,GAAW,IAAI;IACvB,KAAAC,aAAa,GAAW,IAAI;IAC5B,KAAAC,cAAc,GAAW,IAAI;IAC7B,KAAAC,MAAM,GAAW,IAAI;IACrB,KAAAC,WAAW,GAAW,IAAI;IAC1B,KAAAC,UAAU,GAAW,IAAI;IACzB,KAAAC,aAAa,GAAW,IAAI;IAC5B,KAAAC,QAAQ,GAAW,IAAI;IAEvB,KAAAC,SAAS,GAAU,CAAC;MAAEC,aAAa,EAAE;IAAU,CAAC,EAC5B;MAAEA,aAAa,EAAE;IAAe,CAAC,EACjC;MAAEA,aAAa,EAAE;IAAgB,CAAC,EAClC;MAAEA,aAAa,EAAE;IAAQ,CAAC,CAC7C;IAED,KAAAC,gBAAgB,GAAU,CAAC;MAAED,aAAa,EAAE;IAAU,CAAC,EAC5B;MAAEA,aAAa,EAAE;IAAU,CAAC,EAC5B;MAAEA,aAAa,EAAE;IAAW,CAAC,CACvD;IAED,KAAAE,SAAS,GAAU,CAAC;MAAEF,aAAa,EAAE;IAAU,CAAC,EAC5B;MAAEA,aAAa,EAAE;IAAe,CAAC,EACjC;MAAEA,aAAa,EAAE;IAAgB,CAAC,EAClC;MAAEA,aAAa,EAAE;IAAQ,CAAC,CAC7C;IAED,KAAAG,aAAa,GAAU,CAAC;MAAEH,aAAa,EAAE;IAAa,CAAC,EAC/B;MAAEA,aAAa,EAAE;IAAY,CAAE,EAC/B;MAAEA,aAAa,EAAE;IAAQ,CAAC,CACjD;IAED,KAAAI,OAAO,GAAQ,IAAI,CAACL,SAAS;EAI7B;EACAM,QAAQA,CAAA,GAER;EAEAC,WAAWA,CAACC,OAAc;IACxB,IAAGA,OAAO,IAAE,UAAU,EAAC;MACrB,IAAI,CAAChB,QAAQ,GAAE,KAAK;MACpBiB,KAAK,CAAC,UAAU,CAAC;KAClB,MAAK,IAAGD,OAAO,IAAE,eAAe,EAAC;MAChC,IAAI,CAACf,aAAa,GAAE,KAAK;KAC1B,MAAK,IAAGe,OAAO,IAAE,gBAAgB,EAAC;MACjC,IAAI,CAACd,cAAc,GAAG,KAAK;KAC5B,MAAK,IAAGc,OAAO,IAAE,QAAQ,EAAC;MACzB,IAAI,CAACb,MAAM,GAAG,KAAK;KACpB,MAAK,IAAGa,OAAO,IAAE,aAAa,EAAC;MAC9B,IAAI,CAACZ,WAAW,GAAG,KAAK;KACzB,MAAK,IAAGY,OAAO,IAAE,YAAY,EAAC;MAC7B,IAAI,CAACX,UAAU,GAAG,KAAK;KACxB,MAAK,IAAGW,OAAO,IAAE,eAAe,EAAC;MAChC,IAAI,CAACV,aAAa,GAAG,KAAK;KAC3B,MAAK,IAAGU,OAAO,IAAE,UAAU,EAAC;MAC3B,IAAI,CAACT,QAAQ,GAAG,KAAK;KACtB,MAAI,C;EAKP;CAEC;AApEYV,eAAe,GAAAqB,UAAA,EAL3BtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWxB,eAAe,CAoE3B;SApEYA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}